def ident ( int ident ) { if ( ident = = int_constant ) { ident = int_constant ; return ; } else { ident = int_constant ; return ; } endif } def ident ( int ident ) { if ( ident = = ident - int_constant ) { ident = int_constant ; return ; } else { ident = int_constant ; return ; } endif } def ident ( string ident ) { ident = ident + int_constant ; ident [ ident ] = ident ; } def ident ( string ident ) { string ident ; ident = ident [ ident ] ; ident = ident - int_constant ; ident = ident ; return ; } def ident ( string ident ) { ident = ident [ ident ] ; return ; } def ident ( ) { int ident ; ident = ident ( ident ) ; if ( ident = = int_constant ) { print string_constant ; } else { int ident ; ident = ident ( ident ) ; if ( ident = = int_constant ) { print string_constant ; } else { if ( ident = = int_constant ) { print string_constant ; } endif } endif } endif int ident ; for ( ident = int_constant ; ident > = int_constant ; ident = ident - int_constant ) { print ident [ ident ] ; print string_constant ; } } def ident ( ) { int ident ; ident = int_constant ; int ident ; ident = int_constant ; string ident [ int_constant ] ; ident = new string [ int_constant ] ; string ident [ int_constant ] ; ident = new int [ int_constant ] ; ident [ int_constant ] = string_constant ; ident [ int_constant ] = string_constant ; ident [ int_constant ] = string_constant ; ident [ int_constant ] = string_constant ; ident [ int_constant ] = string_constant ; ident [ int_constant ] = string_constant ; int ident ; for ( ident = int_constant ; ident < int_constant ; ident = ident + int_constant ) { ident = ident [ ident ] ; ident [ ident ] = ident ( ident ) ; } ident = ident ( ) ; ident = ident ( ) ; ident = ident ( ) ; ident = ident [ int_constant ] ; ident [ int_constant ] = ident ( ident ) ; ident = ident [ int_constant ] ; ident [ int_constant ] = ident ( ident ) ; ident = ident ( ) ; for ( ident = int_constant ; ident < int_constant ; ident = ident + int_constant ) { ident = ident ( ) ; } ident = ident ( ) ; }
