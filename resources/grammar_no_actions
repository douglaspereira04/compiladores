PROGRAM -> STATEMENT
PROGRAM -> FUNCLIST
PROGRAM -> &

FUNCLIST -> FUNCDEF FUNCLIST'
FUNCLIST' -> FUNCLIST
FUNCLIST' -> &

FUNCDEF -> def ident (  PARAMLIST ) { STATELIST } 

PARAMLIST -> &
PARAMLIST -> TYPE ident PARAMLIST'
PARAMLIST' -> &
PARAMLIST' -> , PARAMLIST 

TYPE -> int
TYPE -> float
TYPE -> string

STATEMENT -> VARDECL ; 
STATEMENT -> ATRIBSTAT ;
STATEMENT -> PRINTSTAT ;
STATEMENT -> READSTAT ;
STATEMENT -> RETURNSTAT ;
STATEMENT -> IFSTAT
STATEMENT -> FORSTAT
STATEMENT -> { STATELIST }
STATEMENT -> break ;  
STATEMENT -> ; 

VARDECL -> int ident INT_INDEX
VARDECL -> float ident INT_INDEX
VARDECL -> string ident INT_INDEX

INT_INDEX -> [ int_constant ] INT_INDEX
INT_INDEX -> &

ATRIBSTAT -> LVALUE = ATRIBSTAT'
ATRIBSTAT' -> EXPRESSION
ATRIBSTAT' -> ALLOCEXPRESSION
ATRIBSTAT' -> FUNCCALL

FUNCCALL -> invoke ident ( PARAMLISTCALL )

PARAMLISTCALL -> ident PARAMLISTCALL'
PARAMLISTCALL -> &
PARAMLISTCALL' -> &
PARAMLISTCALL' -> , PARAMLISTCALL

PRINTSTAT -> print EXPRESSION
READSTAT -> read LVALUE
RETURNSTAT -> return

IFSTAT -> if ( EXPRESSION ) STATEMENT IFSTAT'
IFSTAT' -> else STATEMENT endif
IFSTAT' -> endif

FORSTAT -> for ( ATRIBSTAT ; EXPRESSION  ; ATRIBSTAT ) STATEMENT

STATELIST -> STATEMENT STATELIST'
STATELIST' -> &
STATELIST' -> STATELIST

ALLOCEXPRESSION -> new TYPE ALLOC_SIZE 
ALLOC_SIZE -> [ NUMEXPRESSION  ] ALLOC_SIZE'
ALLOC_SIZE' -> ALLOC_SIZE
ALLOC_SIZE' -> &

EXPRESSION -> NUMEXPRESSION EXPRESSION'
EXPRESSION' -> RELOP NUMEXPRESSION
EXPRESSION' -> &

NUMEXPRESSION -> TERM NUMEXPRESSION'
NUMEXPRESSION' -> SUM TERM NUMEXPRESSION'
NUMEXPRESSION' -> &

TERM -> UNARYEXPR TERM'
TERM' -> MULTI UNARYEXPR TERM'
TERM' -> &

RELOP -> < OREQ
RELOP -> > OREQ
RELOP -> = =
RELOP -> ! =

OREQ -> = 
OREQ -> &

SUM -> + 
SUM -> -

MULTI -> *
MULTI -> / 
MULTI -> % 

UNARYEXPR -> SUM FACTOR
UNARYEXPR -> FACTOR

FACTOR -> int_constant
FACTOR -> float_constant
FACTOR -> string_constant
FACTOR -> null
FACTOR -> ( NUMEXPRESSION )
FACTOR -> LVALUE

LVALUE -> ident NUM_INDEX
NUM_INDEX -> [ NUMEXPRESSION ] NUM_INDEX
NUM_INDEX -> &
